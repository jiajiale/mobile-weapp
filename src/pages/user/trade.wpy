<style lang="less">
    @import "../../assets/styles/user";
    .wx-withdraw-list{
        background: #fff;
        margin-bottom:100rpx;
        .wx-order-info{
            padding:20rpx;
            border-bottom: 1px solid #e8e8e8;
            .wx-order-content{
                padding-top:10rpx;
                .wx-spec{
                    font-size:24rpx;
                    color: #999;
                }
            }
            .wx-order-image{
                display: none;
            }
            .wx-order-extra{
                height: 100rpx !important;
                line-height: 100rpx !important;
            }
        }
    }
    .wx-commission-btn{
        position: fixed;
        bottom: 0rpx;
        width: 100%;
        height: 80rpx;
        line-height: 80rpx;
        background: #ec3a3e;
        text-align: center;
        color:#fff;
    }
</style>
<template>
    <view class="wx-withdraw-list" wx:if="{{withdrawList.length}}">
        <repeat for="{{withdrawList}}" key="{{withdraw.id}}" item="withdraw">
            <view>
                <OrderItem>
                    <view slot="title">{{withdraw.gmt_create}}</view>
                    <view slot="tags">
                        <view class="marginT10">
                            <view class="wx-spec">{{withdraw.status_str}}</view>
                        </view>
                    </view>
                    <view slot="extra">
                        <view style="font-size: 32rpx;">¥{{withdraw.amount}}</view>
                    </view>
                    <view slot="footer" wx:if="{{withdraw.note}}">
                        <view>{{withdraw.note}}</view>
                    </view>
                </OrderItem>
            </view>
        </repeat>
    </view>
    <view wx:if="{{!withdrawList.length}}">
        <NoInfo emptyText="暂无提现记录" marginTop="200"></NoInfo>
    </view>
    <view wx:if="{{withdrawList.length}}" class="wx-commission-btn" data-url="/pages/user/withdraw" bindtap="handleGo">我要提现</view>
</template>

<script>
    import wepy from 'wepy';
    import LoadMore from '../../components/load-more';
    import NoInfo from '../../components/no-info';
    import authorize from '../../mixins/authorize';
    import pagination from '../../mixins/pagination';
    import api from '../../api';
    import tip from '../../utils/tip';
    import enums from '../../utils/enums';
    import utils from '../../utils/util';
    import MSG from '../../utils/msg';
    import OrderItem from '../../components/order-item';

    export default class UserTrade extends wepy.page {
        config = {
            navigationBarTitleText: '提现记录',
            usingComponents: {

            }
        };

        data = {
            page: 1,
            hasPage: true,
            withdrawList: []
        };

        components = {
            OrderItem: OrderItem,
            NoInfo: NoInfo,
        };

        mixins = [authorize,pagination];

        methods = {
            handleGo(e){
                this.checkLogin(function () {
                    let url = e.currentTarget.dataset.url;
                    wepy.navigateTo({url: url});
                });
            }
        };

        queryReload(){
            this.page = 1;
            this.withdrawList = [];
            this.hasPage = true;
            this.queryItemList();
        };

        async queryItemList() {
            tip.loading(MSG.LOADING);
            let conditions = {
                page: this.page,
            };

            await api.queryWithdrawList('POST',conditions).then(resp => {
                tip.loaded();
                if(resp.data){
                    resp.data.items.filter(item => {
                        item.gmt_create = utils.formatDateTime(item.gmt_create,'yyyy-MM-dd HH:mm:ss');
                        item.status_str = enums.getDesc('WITHDRAW_STATUS',item.status);
                    });
                    this.withdrawList = this.withdrawList.concat(resp.data.items);
                    if(resp.data.pager.index >= resp.data.pager.count){
                        this.hasPage = false;
                    }
                    this.$apply();
                }
            });
        };

        onShow() {
            let _this = this;
            this.checkAuthorize(function () {
                _this.checkLogin(function () {
                    _this.queryReload();
                });
            });
        };

        onLoad() {

        }
    }
</script>
