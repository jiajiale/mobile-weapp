<style lang="less">
    page{
        background: #F2F2F2;
    }
    .wx-goods-list{
        padding: 10rpx 20rpx;
        .wx-goods-col{
            padding: 10rpx 15rpx 20rpx 15rpx;
            font-size: 25rpx;
            .wx-goods-info{
                box-shadow: 0 2px 2px rgba(0,0,0,.08);
            }
            .wx-goods-image{
                height: 280rpx;
            }
            .wx-goods-title{
                padding: 0rpx 10rpx;
                white-space: nowrap;
                overflow: hidden;
                text-overflow: ellipsis;
            }
            .wx-goods-extra{
                padding: 0rpx 10rpx;
                .wx-goods-price{
                    color:#ec3a3e;
                }
            }
        }
    }
</style>
<template>
    <scroll-view scroll-y bindscrolltolower="onReachBottom" wx:if="{{goodsList.length > 0}}">
        <view class="wx-goods-list">
            <i-row>
                <i-col span="12" i-class="wx-goods-col" wx:for="{{goodsList}}" wx:key="{{item.id}}" bindtap="handleNavigation" data-item="{{item}}">
                    <GoodsItem>
                        <view slot="thumb" style="height: 100%;"><image src="{{goodsImgUrl + item.original_img}}" mode="scaleToFill"></image></view>
                        <view slot="title">{{item.goods_name}}</view>
                        <view slot="extra"><span class="wx-goods-price">￥{{item.shop_price}}</span></view>
                    </GoodsItem>
                </i-col>
            </i-row>
        </view>
        <LoadMore :hasPage.sync="hasPage" :itemList.sync="goodsList" emptyText="暂无商品信息"></LoadMore>
    </scroll-view>
    <view wx:if="{{!goodsList.length}}">
        <NoInfo :emptyText="emptyText" marginTop="200"></NoInfo>
    </view>
</template>

<script>
    import wepy from 'wepy';
    import GoodsItem from '../../components/goods-item';
    import LoadMore from '../../components/load-more';
    import NoInfo from '../../components/no-info';
    import authorize from '../../mixins/authorize';
    import pagination from '../../mixins/pagination';
    import api from '../../api';
    import tip from '../../utils/tip';
    import utils from '../../utils/util';
    import MSG from '../../utils/msg';

    export default class ActivityGoods extends wepy.page {
        config = {
            navigationBarTitleText: '活动商品',
            usingComponents: {
                "i-row": "../../iview/row/index",
                "i-col": "../../iview/col/index",
                "i-icon": "../../iview/icon/index",
            }
        };
        components = {
            GoodsItem: GoodsItem,
            LoadMore: LoadMore,
            NoInfo: NoInfo,
        };

        mixins = [pagination,authorize];

        data = {
            goodsImgUrl: api.GOODS_IMG_URL,
            params: [],
            goodsList: [],
            keywords: '',
            page: 1,
            hasPage: true,
            emptyText: '暂无商品信息'
        };

        computed = {};

        methods = {
            handleNavigation(e){
                let item = e.currentTarget.dataset.item;
                if(item.is_goods){
                    wepy.navigateTo({
                        url: "/pages/goods/detail?id=" + item.id
                    })
                }else{
                    wepy.navigateTo({
                        url: "/pages/service/detail?id=" + item.id
                    })
                }
            }
        };

        queryReload(){
            this.page = 1;
            this.goodsList = [];
            this.hasPage = true;
            this.queryItemList();
        };

        async queryItemList() {
            tip.loading(MSG.LOADING);
            let conditions = {
                page: this.page,
                keywords: this.keywords,
            };

            if(this.params.activity_id){
                conditions.activity_id = this.params.activity_id;
            }
            await api.queryGoodsList('POST',conditions).then(resp => {
                tip.loaded();
                if(resp.data.goodsList){
                    this.goodsList = this.goodsList.concat(resp.data.goodsList.items);
                    if(resp.data.goodsList.pager.index >= resp.data.goodsList.pager.count){
                        this.hasPage = false;
                    }
                }
                this.$apply();
            });
        };

        onShow() {
            let _this = this;
            this.checkAuthorize(function () {
                if(!_this.params.from){
                    _this.queryReload();
                }
            });
        };

        onLoad(params) {
            params.activity_id = 1;
            this.params = params;
        }
    }
</script>
