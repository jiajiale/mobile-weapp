<style lang="less">
    @import "../../assets/styles/pay";
</style>
<template>
    <view class="wx-pay-box">
        <view class="wx-head">
            <view class="wx-title">订单需付款</view>
            <view class="wx-subtitle">请及时付款，超时订单将自动关闭</view>
        </view>
        <i-cell-group>
            <i-cell title="订单编号" i-class="wx-spec-item" value="￥{{goodsOrder.order_sn}}"></i-cell>
            <i-cell title="商品金额" i-class="wx-spec-item" value="￥{{goodsOrder.goods_price}}"></i-cell>
            <i-cell title="运费" i-class="wx-spec-item" value="￥{{goodsOrder.shipping_price}}"></i-cell>
            <i-cell title="积分抵扣" i-class="wx-spec-item" is-link bind:click="switchPointPay">
                <view slot="footer" style="font-size: 24rpx;color: #999;">
                    <span wx:if="{{pointMoney}}">￥{{pointMoney}}</span>
                    <span wx:else>使用移动积分</span>
                </view>
            </i-cell>
            <i-cell title="需付款" i-class="wx-spec-item" value="￥{{goodsOrder.total_amount - pointMoney}}"></i-cell>
        </i-cell-group>
    </view>

    <i-panel title="选择支付方式" i-class="wx-pay-mode">
        <radio-group class="wx-radio-group" bindchange="changePayMode">
            <view wx:for="{{payModeList}}" wx:key="{{index}}">
                <label class="radio">
                    <radio value="{{item.pay_code}}" checked="{{item.checked}}" color="#ec3a3e"/>
                    {{item.pay_name}}
                </label>
            </view>
        </radio-group>
    </i-panel>

    <view class="wx-pay-actions">
        <form bindsubmit="handlePay" report-submit="true">
        <i-row>
            <i-col span="6" i-class="wx-pay-btn">
                <button class="{{isSubmit ? 'wx-disable' : ''}}" form-type="submit" plain="true">确定</button>
            </i-col>
        </i-row>
        </form>
    </view>

    <PointSheet :visible.sync="pointVisible" :maxHeight.sync="pointMaxHeight"
                :bottomStyle.sync="pointBottomStyle"
                :zIndexStyle.sync="pointZIndexStyle">
        <view slot="content">
            <view class="wx-pay-point">
                <view bindtap="switchPointPay" style="position: absolute;top:10rpx;right:20rpx;z-index: 200;">
                    <icon class="iconfont icon-guanbi wx-sheet-close-icon"/>
                </view>
                <i-panel title="积分抵扣">
                    <view style="text-align: center;">
                        <i-input bindchange="handleInput" data-key="point" type="number" maxlength="2" i-class="wx-point" autofocus placeholder="清输入抵扣积分" />
                    </view>
                </i-panel>
                <view style="text-align: center;">
                    <i-input bindchange="handleInput" data-key="code" data-index="0" type="number" maxlength="1" mode="wrapped" i-class="wx-code"/>
                    <i-input bindchange="handleInput" data-key="code" data-index="1" type="number" maxlength="1" mode="wrapped" i-class="wx-code"/>
                    <i-input bindchange="handleInput" data-key="code" data-index="2" type="number" maxlength="1" mode="wrapped" i-class="wx-code"/>
                    <i-input bindchange="handleInput" data-key="code" data-index="3" type="number" maxlength="1" mode="wrapped" i-class="wx-code"/>
                </view>
            </view>
            <view style="position: fixed;bottom: 0rpx;width: 100%">
                <i-button type="success" class="{{isSubmit ? 'wx-buy-action wx-disable' : 'wx-buy-action'}}" size="small" bindtap="submitPoint">{{ pointBtnTxt }}</i-button>
            </view>
        </view>
    </PointSheet>
</template>

<script>
    import wepy from 'wepy';
    import authorize from '../../mixins/authorize';
    import ContentSheet from '../../components/content-sheet';
    import api from '../../api';
    import tip from '../../utils/tip';
    import utils from '../../utils/util';
    import MSG from '../../utils/msg';

    export default class PayIndex extends wepy.page {
        config = {
            navigationBarTitleText: '支付订单',
            usingComponents: {
                "i-panel": "../../iview/panel/index",
                "i-cell-group": "../../iview/cell-group/index",
                "i-cell": "../../iview/cell/index",
                "i-button": "../../iview/button/index",
                "i-input": "../../iview/input/index"
            }
        };
        components = {
            PointSheet: ContentSheet,
        };

        mixins = [authorize];

        data = {
            params: [],
            pointMaxHeight: 900,
            pointBottomStyle: 0,
            pointZIndexStyle: 101,
            pointVisible: false,
            isSubmit: false,
            isOffline: false,
            goodsOrder: {},
            payModeList: [],
            point: '',
            codeArr: [],
            payCode: '',
            payName: '',
            hasPointOrder: false,
            pointBtnTxt: '发送验证码',
            pointMoney: 0
        };

        methods = {
            switchPointPay(e){
                this.pointVisible = !this.pointVisible;
            },
            handleInput(e){
                let key = e.currentTarget.dataset.key;
                let index = e.currentTarget.dataset.index;

                if(key === 'point'){
                    this.point = e.detail.detail.value;
                    this.hasPointOrder = false;
                    this.pointBtnTxt = '发送验证码';
                }else if(key === 'code'){
                    this.codeArr[index] = e.detail.detail.value;
                }
            },
            submitPoint(){
                if(!this.hasPointOrder){
                    this.pointOrder();
                }else{
                    this.pointPay();
                }
            },
            handlePay(e){
                let formId = e.detail.formId;
                this.payOrder(formId);
            },
            changePayMode({ detail }){
                let payMode = detail.value;

                this.payModeList.filter(item => {
                    if(item.pay_code === payMode){
                        this.payCode = item.pay_code;
                        this.payName = item.pay_name;
                    }
                });
            }
        };

        pointOrder(){
            let _this = this;
            if(!this.isSubmit){
                this.isSubmit = true;
                tip.loading(MSG.COMMITTING);
                api.createPointOrder('POST',{point:this.point,order_id:this.goodsOrder.id}).then(resp => {
                    tip.loaded();
                    _this.isSubmit = false;
                    if(resp && resp.code === 200){
                        _this.hasPointOrder = true;
                        _this.pointBtnTxt = '确认抵扣';
                        _this.switchPointPay();
                        _this.$apply();
                    }else{
                        tip.error(resp.msg);
                    }
                });
            }
        }

        pointPay(){
            let _this = this;
            let code = this.codeArr.join('');
            if(!this.isSubmit) {
                this.isSubmit = true;
                tip.loading(MSG.COMMITTING);
                api.payPointOrder('POST', {code: code, order_id: this.goodsOrder.id}).then(resp => {
                    tip.loaded();
                    _this.isSubmit = false;
                    if (resp && resp.code === 200) {
                        _this.pointMoney = resp.data.integral_money;
                        _this.$apply();
                    } else {
                        tip.error(resp.msg);
                    }
                });
            }
        }

        async payOrder(formId) {
            let _this = this;
            if(!this.isSubmit){
                this.isSubmit = true;
                tip.loading(MSG.COMMITTING);

                api.payOrder('POST',{
                    order_no: this.goodsOrder.order_sn,
                    pay_code: this.payCode,
                    pay_name: this.payName,
                    form_id : formId
                }).then(result => {
                    tip.loaded();
                    this.isSubmit = false;
                    this.$apply();

                    if(result.data === true){
                        // 线下支付
                        if(this.goodsOrder.is_goods){
                            wx.navigateTo({url: '/pages/user/order'})
                        }else{
                            wx.navigateTo({url: '/pages/user/service'})
                        }
                    }else{
                        wx.requestPayment({
                            'timeStamp': result.data.timeStamp,
                            'nonceStr': result.data.nonceStr,
                            'package': result.data.package,
                            'signType': result.data.signType,
                            'paySign': result.data.paySign,
                            'success':function(res){
                                console.log(res);
                                console.log(_this.goodsOrder);
                                tip.toast('支付成功',5000,function () {
                                    if(!!parseInt(_this.goodsOrder.is_goods)){
                                        wx.navigateTo({url: '/pages/user/order'})
                                    }else{
                                        wx.navigateTo({url: '/pages/user/service'})
                                    }
                                },'success')
                            },
                            'fail':function(res){
                                tip.error('支付失败');
                            }
                        })
                    }
                });
            }
        };

        async queryItem() {
            tip.loading(MSG.LOADING);
            await api.queryPayOrder('POST',{
                order_id: this.params.order_id,
            }).then(resp => {
                tip.loaded();
                if(resp.data){
                    this.payModeList = resp.data.payModeList;
                    this.payModeList.forEach(item => {
                        if(item.checked){
                            this.payCode = item.pay_code;
                            this.payName = item.pay_name;
                        }
                    });
                    this.goodsOrder = resp.data.goodsOrder;
                    this.pointMoney = this.goodsOrder.integral_money;
                    this.$apply();
                }else{
                    wx.navigateBack({delta: 1});
                }
            });
        };

        onShow() {
            let _this = this;
            this.checkAuthorize(function () {
                _this.queryItem();
            });
        };

        onLoad(params) {
            params.order_id = 4285;
            this.params = params;
        }

        onUnload(){
            if(this.params.from){
                wx.navigateBack({
                    delta: 1
                })
            }
        }
    }
</script>
