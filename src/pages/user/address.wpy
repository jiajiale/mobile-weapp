<style lang="less">
    @import "../../assets/styles/user";
</style>
<template>
    <view class="wx-address-list">
        <radio-group class="radio-group" bindchange="handleChangeAddress">
            <view class="wx-address-item marginB20" wx:for="{{addressList}}" wx:key="{{item.id}}">
                <view class="wx-address-content">
                    <view class="wx-address-user">{{item.consignee}}：{{item.mobile}}</view>
                    <view class="wx-address-info">{{item.region}}{{item.address}}</view>
                    <view class="wx-address-close" @tap="handleDelAddress" data-item="{{item}}"><i-icon type="close" /></view>
                </view>
                <view class="wx-address-footer">
                    <i-row>
                        <i-col span="18">
                            <label><radio value="{{isDefault}}" color="#ec3a3e" checked="{{item.is_default}}"/>设为默认地址</label>
                        </i-col>
                        <i-col span="6">
                            <view style="text-align: right;padding-right: 10rpx;color: #999;">编辑</view>
                        </i-col>
                    </i-row>
                </view>
            </view>
        </radio-group>
    </view>

    <i-modal title="{{modalTitle}}" visible="{{visibleModal}}" bind:ok="handleSubmit" bind:cancel="handleCancel" class="wx-address-modal">
        <i-grid>
            <i-grid-item i-class="wx-modal-user"><i-input value="{{ formInfo.name }}" placeholder="姓名" /></i-grid-item>
            <i-grid-item i-class="wx-modal-user"><i-input value="{{ formInfo.mobile }}" placeholder="手机号" /></i-grid-item>
        </i-grid>
        <i-row>
            <i-col span="24" i-class="address-item">
                <picker
                        mode="multiSelector"
                        bindchange="handlePickerChange"
                        bindcolumnchange="handlePickerColumnChange"
                        value="{{cityIdxArr}}"
                        range-key="name"
                        range="{{cityArr}}"
                >
                    <view style="padding: 25rpx 30rpx;">请选择地址<span style="float: right;">{{ cityStr }}</span></view>
                </picker>
            </i-col>
        </i-row>
        <i-row>
            <i-col span="24" i-class="address-item"><i-input value="{{ formInfo.address }}" placeholder="输入详细地址" /></i-col>
        </i-row>
        <i-row>
            <i-col span="24" i-class="address-item"><i-input value="{{ formInfo.zipcode }}" placeholder="输入邮政编码" /></i-col>
        </i-row>
    </i-modal>

    <i-modal title="删除确认" visible="{{ confirmModal }}" actions="{{ confirmBtn }}" bind:click="handleConfirm">
        <view style="margin-bottom: 20rpx;">确定要删除吗？</view>
    </i-modal>

    <view class="wx-address-add" bindtap="handleAddAddress"><i-icon type="add" size="20" color="#ec3a3e"/>新增地址</view>
</template>

<script>
    import wepy from 'wepy';
    import authorize from '../../mixins/authorize';
    import api from '../../api';
    import tip from '../../utils/tip';
    import utils from '../../utils/util';
    import MSG from '../../utils/msg';

    export default class UserAddress extends wepy.page {
        config = {
            navigationBarTitleText: '地址',
            usingComponents: {
                "i-icon": "../../iview/icon/index",
                "i-modal": "../../iview/modal/index",
                "i-input": "../../iview/input/index",
                "i-grid": "../../iview/grid/index",
                "i-grid-item": "../../iview/grid-item/index",
                "i-row": "../../iview/row/index",
                "i-col": "../../iview/col/index",
                "i-cell": "../../iview/cell/index"
            }
        };
        components = {
        };

        mixins = [authorize];

        data = {
            isDefault: true,
            visibleModal: false,
            confirmModal: false,
            confirmBtn: [
                {
                    name: '取消'
                },
                {
                    name: '删除',
                    color: '#ed3f14',
                    loading: false
                }
            ],
            modalTitle: '新增地址',
            addressList: [],
            cityList: [],
            cityArr: [],
            cityIdxArr: [0,0,0],
            cityStr: '',
            formInfo: {},
            delItem: {}
        };
        methods = {
            handleChangeAddress({ detail = {} }){
                console.log(detail.value)
            },
            handleAddAddress(){
                this.modalTitle = '新增地址';
                this.visibleModal = true;
            },
            handleDelAddress(e){
                this.delItem = e.currentTarget.dataset.item;
                this.confirmModal = true;
            },
            handleSubmit(){
                tip.loading(MSG.COMMITTING);
                api.saveAddress('POST',this.formInfo).then(resp => {
                    tip.loaded();
                    if(resp.data){
                        this.visibleModal = false;
                        this.queryItemList();
                    }
                });
            },
            handleCancel(){
                this.visibleModal = false;
            },
            handleConfirm(){
                tip.loading(MSG.DELETE);
                api.delAddress('POST',{address_id: this.delItem.id}).then(resp => {
                    tip.loaded();
                    if(resp.code = 200){
                        this.confirmModal = false;
                        this.queryItemList();
                    }
                });
            },
            handlePickerChange(e) {
                let cityIdxArr = e.detail.value;
                let provice = this.cityList[cityIdxArr[0]];
                let city = this.cityList[cityIdxArr[0]].childrens[cityIdxArr[1]];
                let district = this.cityList[cityIdxArr[0]].childrens[cityIdxArr[1]].childrens[cityIdxArr[2]];

                this.cityStr = provice.name + ',' + city.name + ',' + district.name;
                this.formInfo.provice = provice.id;
                this.formInfo.city = city.id;
                this.formInfo.district = district.id;
            },
            handlePickerColumnChange(e) {
                let column = e.detail.column;
                let columnIdx = e.detail.value;

                if(column === 0){
                    this.cityIdxArr = [columnIdx,0,0];
                    this.cityArr[1] = this.cityList[columnIdx].childrens;
                    this.cityArr[2] = this.cityList[columnIdx].childrens[0].childrens;
                }else if(column === 1){
                    this.cityIdxArr = [this.cityIdxArr[0],columnIdx,0];
                    this.cityArr[2] = this.cityList[this.cityIdxArr[0]].childrens[columnIdx].childrens;
                }else if(column === 2){
                    this.cityIdxArr = [this.cityIdxArr[0],this.cityIdxArr[1],columnIdx];
                }
            },
        };

        async queryItemList() {
            tip.loading(MSG.LOADING);
            await api.queryAddressList('POST',null).then(resp => {
                tip.loaded();
                if(resp.data){
                    this.addressList = resp.data.addressList;
                    this.cityList = resp.data.cityList;
                    this.cityArr = [this.cityList,this.cityList[0].childrens,this.cityList[0].childrens[0].childrens];
                    this.$apply();
                }
            });
        };

        onShow() {
            let _this = this;
            this.checkAuthorize(function () {
                _this.queryItemList();
            });
        };

        onLoad() {

        }
    }
</script>
