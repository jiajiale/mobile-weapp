<style lang="less">
    @import "../../assets/styles/goods";
</style>
<template>
    <view class="wx-goods-search">
        <input placeholder="商品搜索" value="{{keywords}}" data-key="name" bindinput="handleSearchInput"/>
        <view class="wx-search-icon"><i-icon type="search" size="20" color="#999999"/></view>
        <view class="wx-search-btn" @tap="queryReload">搜索</view>
    </view>

    <scroll-view scroll-y bindscrolltolower="onReachBottom" wx:if="{{goodsList.length > 0}}">
        <view class="wx-goods-list">
            <i-row>
                <navigator open-type="navigate" hover-class="none" url="/pages/goods/detail?id={{item.id}}">
                    <i-col span="12" i-class="wx-goods-col" wx:for="{{goodsList}}" wx:key="{{item.id}}">
                        <GoodsItem>
                            <view slot="thumb" style="height: 100%;"><image src="{{goodsImgUrl + item.original_img}}" mode="scaleToFill"></image></view>
                            <view slot="title">{{item.goods_name}}</view>
                            <view slot="extra"><span class="wx-goods-price">￥{{item.shop_price}}</span></view>
                        </GoodsItem>
                    </i-col>
                </navigator>
            </i-row>
        </view>
        <LoadMore :hasPage.sync="hasPage" :itemList.sync="goodsList" emptyText="暂无商品信息"></LoadMore>
    </scroll-view>
</template>

<script>
    import wepy from 'wepy';
    import GoodsItem from '../../components/goods-item';
    import LoadMore from '../../components/load-more';
    import authorize from '../../mixins/authorize';
    import pagination from '../../mixins/pagination';
    import api from '../../api';
    import tip from '../../utils/tip';
    import utils from '../../utils/util';
    import MSG from '../../utils/msg';

    export default class GoodsIndex extends wepy.page {
        config = {
            navigationBarTitleText: '商品搜索',
            usingComponents: {
                "i-row": "../../iview/row/index",
                "i-col": "../../iview/col/index",
                "i-icon": "../../iview/icon/index"
            }
        };
        components = {
            GoodsItem: GoodsItem,
            LoadMore: LoadMore,
        };

        mixins = [pagination,authorize];

        data = {
            goodsImgUrl: api.GOODS_IMG_URL,
            goodsList: [],
            keywords: '',
            page: 1,
            hasPage: true,
        };

        computed = {};

        methods = {

        };

        handleSearchInput(e){
            let key = e.currentTarget.dataset.key;
            this.keywords = e.detail.value;
        }

        queryReload(){
            this.page = 1;
            this.goodsList = [];
            this.hasPage = true;
            this.queryItemList();
        };

        async queryItemList() {
            tip.loading(MSG.LOADING);
            await api.queryGoodsList('POST',{
                page: this.page,
                keywords: this.keywords,
                is_goods: 1
            }).then(resp => {
                tip.loaded();
                if(resp.data){
                    this.goodsList = this.goodsList.concat(resp.data.items);
                    if(resp.data.pager.index >= resp.data.pager.count){
                        this.hasPage = false;
                    }
                    this.$apply();
                }
            });
        };

        onShow() {
            let _this = this;
            this.checkAuthorize(function () {
                _this.queryReload();
            });
        };

        onLoad() {

        }
    }
</script>
