<style lang="less">
    .post-modal{
        width: 90% !important;
    }
    .wx-goods-post{
        .wx-post-download{
            button{
                margin-top: 20rpx;
                border: none;
                background: #ec3a3e;
                font-size: 28rpx;
                color: #fff;
                border-radius: 30rpx;
            }
        }
    }
</style>
<template>
    <!--<view class="wx-goods-post" wx:if="{{visible}}">-->
        <!--<div class="wx-post-content">-->
            <!--<canvas canvas-id="post" style="width: 100%;height: 90%;"/>-->
            <!--<div class="wx-post-download">-->
                <!--<button plain @tap="handleDownload">下载海报图片</button>-->
            <!--</div>-->
        <!--</div>-->
        <!--<view class="wx-post-mask" @tap="handleClose"></view>-->
    <!--</view>-->

    <view class="wx-goods-post">
        <i-modal visible="{{ visible }}" className="post-modal" show-ok="{{ showBtn }}" show-cancel="{{ showBtn }}" style="width: 90% !important;">
            <view class="wx-post-title">{{goods.goods_name}}</view>
            <view class="wx-post-image">
                <image src="{{goodsImgUrl + goods.original_img}}"
                       mode="scaleToFill"></image>
            </view>
            <div class="wx-post-download">
                <button plain @tap="handleDownload">下载海报图片</button>
            </div>
        </i-modal>
    </view>
</template>
<script>
    import wepy from 'wepy';
    import api from '../api';
    import util from '../utils/util';

    export default class GoodsPost extends wepy.component {
        props = {
            visible: {
                type: Boolean
            },
            goods: {
                type: Object
            },
        };
        data = {
            goodsImgUrl: api.GOODS_IMG_URL,
            screenW: wx.getSystemInfoSync().screenWidth,
            screenH: wx.getSystemInfoSync().screenHeight,
            ratio: wx.getSystemInfoSync().pixelRatio,
            context: null,
            showBtn: false,
        };
        watch = {
            visible(val) {
                if(val){
                    //this.drawPost();
                }
            }
        };
        methods = {
            handleClose(){
                this.$emit('handleClosePost')
            },
            handleDownload(){
                let that = this;
                setTimeout(() => {
                    wx.canvasToTempFilePath({
                        x: 0,
                        y: 0,
                        canvasId: 'post',
                        success: function (res) {
                            let tmpImg = res.tempFilePath;
                            wx.saveImageToPhotosAlbum({
                                filePath: tmpImg,
                                success() {
                                    that.$emit('handleClosePost');
                                    wx.showToast({title: '保存成功'})
                                },
                                fail() {
                                    wx.showToast({title: '保存失败'})
                                }
                            })
                        },
                        fail: function (res) {
                        }
                    })
                }, 50);
            }
        };

        conv(val){
            return this.ratio * val;
        };

        drawPost(){
            let that = this;
            setTimeout(function () {
                that.context = wx.createCanvasContext('post');
                that.context.setFillStyle("#ffffff");
                that.context.fillRect(0, 0, that.conv(that.screenW), that.conv(that.screenH));

                //绘制标题
                that.context.setFontSize(14);
                that.context.setFillStyle('#333333');
                that.context.fillText(that.goods.goods_name, that.conv(10), that.conv(35));
                that.context.stroke();

                that.context.setFontSize(14);
                that.context.setFillStyle('#333333');
                that.context.fillText('￥' + that.goods.shop_price, that.conv(75), that.screenH * 0.81 - 100);
                that.context.stroke();

                that.context.setFontSize(14);
                that.context.setFillStyle('#333333');
                that.context.fillText('长按二维码识别购买', that.conv(75), that.screenH * 0.81 - 65);
                that.context.stroke();

                let logoPath = that.goodsImgUrl + that.goods.original_img;
                let imgWidth = that.screenW - that.conv(40);
                wx.getImageInfo({
                    src: logoPath,
                    success(res) {
                        let path = res.path;
                        that.context.drawImage(path, that.conv(10), that.conv(40), imgWidth , imgWidth);
                    }
                });

                api.queryGoodsQrcode('POST',{
                    goods_id: that.goods.id,
                }).then(resp => {
                    if(resp.code === 200){
                        let base64Data = 'data:image/jpg;base64,' + resp.data.code;
                        let parseCode = util.base64src(base64Data);

                        parseCode.then(val => {
                            wx.getImageInfo({
                                src: val,
                                success(res) {
                                    let path = res.path;
                                    that.context.drawImage(path, that.conv(10), that.screenH * 0.81 - 140, 100 , 100);
                                }
                            });
                        });
                    }
                });

                setTimeout(function () {
                    that.context.draw();
                },3000)
            },10)
        };
    }
</script>