<style lang="less">
    @import "../../assets/styles/coupon";
</style>
<template>
    <radio-group class="radio-group" bindchange="handleCheckCoupon">
    <view wx:if="{{position != 'list'}}">
        <i-cell-group>
            <i-cell title="不使用优惠券">
                <radio slot="footer" value="0" color="#ec3a3e" checked="checked"/>
            </i-cell>
        </i-cell-group>
    </view>
    <view wx:else>
        <i-tabs current="{{ current }}" color="#ec3a3e" bindchange="handleChangeStatus">
            <i-tab key="UNUSED" title="未使用"></i-tab>
            <i-tab key="USED" title="已使用"></i-tab>
            <i-tab key="EXPIRED" title="已过期"></i-tab>
        </i-tabs>
    </view>
    <view class="wx-coupon-list marginT20">
        <repeat for="{{couponList}}" key="index" index="index" item="item" wx:if="{{couponList.length}}">
            <view class="marginB20">
                <CouponItem :current.sync="current" :position.sync="position" :coupon.sync="item"></CouponItem>
            </view>
        </repeat>
        <view wx:if="{{!couponList.length}}">
            <NoInfo emptyText="暂无优惠券信息" marginTop="200"></NoInfo>
        </view>
    </view>
    </radio-group>
</template>

<script>
    import wepy from 'wepy';
    import LoadMore from '../../components/load-more';
    import NoInfo from '../../components/no-info';
    import CouponItem from '../../components/coupon-item';
    import authorize from '../../mixins/authorize';
    import pagination from '../../mixins/pagination';
    import api from '../../api';
    import tip from '../../utils/tip';
    import utils from '../../utils/util';
    import MSG from '../../utils/msg';

    export default class UserCoupon extends wepy.page {
        config = {
            navigationBarTitleText: '我的优惠券',
            usingComponents: {
                "i-tabs": "../../iview/tabs/index",
                "i-tab": "../../iview/tab/index",
                "i-row": "../../iview/row/index",
                "i-col": "../../iview/col/index",
                "i-cell-group": "../../iview/cell-group/index",
                "i-cell": "../../iview/cell/index",
            }
        };
        components = {
            NoInfo: NoInfo,
            CouponItem: CouponItem,
        };

        mixins = [authorize,pagination];

        data = {
            current: 'UNUSED',
            params: [],
            position: 'list',
            page: 1,
            hasPage: true,
            couponList: [],
            couponInfo: null
        };

        methods = {
            handleChangeStatus({ detail }){
                this.current = detail.key;
                this.queryReload();
            },
            handleCheckCoupon({ detail }){
                let user_coupon_id,amount = 0,couponInfo = {};
                user_coupon_id = detail.value;

                if(user_coupon_id > 0){
                    this.couponList.forEach(function (userCoupon) {
                        if(userCoupon.id === user_coupon_id){
                            amount = userCoupon.amount;
                        }
                    });
                    couponInfo = {
                        user_coupon_id: detail.value,
                        amount: amount,
                    };
                }else{
                    couponInfo = {
                        user_coupon_id: 0,
                        amount: 0,
                    };
                }
                wx.setStorageSync('couponInfo', couponInfo);

                wepy.navigateBack({delta: 1});
            }
        };

        queryReload(){
            this.page = 1;
            this.couponList = [];
            this.hasPage = true;
            this.queryItemList();
        };

        async queryItemList() {
            tip.loading(MSG.LOADING);
            let params = {
                page: this.page,
                status: this.current
            };

            if(this.couponInfo && this.couponInfo.order_amount){
                params.order_amount = this.couponInfo.order_amount;
            }
            await api.queryCouponList('POST',params).then(resp => {
                tip.loaded();
                if(resp.data){
                    resp.data.items.filter(item => {
                        item.amount = parseInt(item.amount);
                        item.order_amount = parseInt(item.order_amount);
                        item.checked = !!(this.couponInfo && item.id === this.couponInfo.user_coupon_id);
                    });
                    this.couponList = this.couponList.concat(resp.data.items);
                    if(resp.data.pager.index >= resp.data.pager.count){
                        this.hasPage = false;
                    }
                    this.$apply();
                }
            });
        };

        onShow() {
            let _this = this;
            this.checkAuthorize(function () {
                _this.queryReload();
            });
        };

        onLoad(params) {
            this.params = params;
            if(params.from && params.from === 'order'){
                this.position = 'order';
                this.couponInfo = wx.getStorageSync('couponInfo');
            }
        }
    }
</script>
