<style lang="less">
    @import "../../assets/styles/service";
</style>
<template>
    <view class="wx-search">
        <input placeholder="请输入名称" value="{{keywords}}" data-key="name" bindinput="handleInput"/>
        <view class="wx-search-icon"><i-icon type="search" size="20" color="#999999"/></view>
        <view class="wx-search-btn" @tap="queryReload">搜索</view>
    </view>

    <scroll-view scroll-y bindscrolltolower="onReachBottom" wx:if="{{goodsList.length > 0}}">
        <view class="wx-goods-list">
            <view class="wx-goods-item" wx:for="{{goodsList}}" wx:key="{{item.id}}" bindtap="handleNavigation" data-item="{{item}}">
                <i-row class="wx-goods-item-head">
                    <i-col span="24" i-class="col-class">
                        <image src="{{goodsImgUrl + (item.app_img ? item.app_img : item.original_img)}}"
                               mode="scaleToFill"></image>
                    </i-col>
                </i-row>
                <i-row class="wx-goods-item-foot">
                    <i-col span="24" i-class="col-class">
                        <view class="wx-goods-price">
                            <span class="new-price">￥{{item.shop_price}}</span>
                            <span class="old-price">￥{{item.market_price}}</span>
                        </view>
                        <view class="wx-goods-title">{{item.goods_name}}</view>
                        <view class="wx-goods-share">
                            <button open-type="share" plain style="border:none;" data-item="{{item}}"><icon class="iconfont icon-fenxiang"/></button>
                        </view>
                    </i-col>
                </i-row>
            </view>
        </view>
        <LoadMore :hasPage.sync="hasPage" :itemList.sync="goodsList" emptyText="暂无业务信息"></LoadMore>
    </scroll-view>
</template>

<script>
    import wepy from 'wepy';
    import authorize from '../../mixins/authorize';
    import pagination from '../../mixins/pagination';
    import ContentSheet from '../../components/content-sheet';
    import ContentModal from '../../components/content-modal';
    import LoadMore from '../../components/load-more';
    import api from '../../api';
    import tip from '../../utils/tip';
    import utils from '../../utils/util';
    import MSG from '../../utils/msg';

    export default class ServiceIndex extends wepy.page {
        config = {
            navigationBarTitleText: '业务',
            usingComponents: {
                "i-row": "../../iview/row/index",
                "i-col": "../../iview/col/index",
                "i-button": "../../iview/button/index",
                "i-icon": "../../iview/icon/index",
                "i-cell-group": "../../iview/cell-group/index",
                "i-cell": "../../iview/cell/index",
                "i-panel": "../../iview/panel/index",
                "i-swipeout": "../../iview/swipeout/index"
            }
        };
        components = {
            GoodsSheet: ContentSheet,
            CartSheet: ContentSheet,
            QRModal: ContentModal,
            LoadMore: LoadMore,
        };

        mixins = [pagination,authorize];

        data = {
            params: [],
            goodsImgUrl: api.GOODS_IMG_URL,
            goodsList: [],
            hasPage: true,
            keywords: ''
        };

        methods = {
            handleNavigation(e){
                let item = e.currentTarget.dataset.item;
                wepy.navigateTo({
                    url: "/pages/service/detail?id=" + item.id
                })
            },
        };

        queryReload(){
            this.page = 1;
            this.goodsList = [];
            this.hasPage = true;
            this.queryItemList();
        };

        async queryItemList() {
            tip.loading(MSG.LOADING);
            let condition = {
                page: this.page,
                keywords: this.keywords,
                is_goods: 0
            };

            if(this.params.category_id){
                condition.category_id = this.params.category_id;
            }
            await api.queryGoodsList('POST',condition).then(resp => {
                tip.loaded();
                if(resp.data){
                    this.goodsList = this.goodsList.concat(resp.data.goodsList.items);
                    if(resp.data.goodsList.pager.index >= resp.data.goodsList.pager.count){
                        this.hasPage = false;
                    }
                    this.$apply();
                }
            });
        };

        onShareAppMessage(res) {
            if(res.from === 'button'){
                let item = res.target.dataset.item;
                let userFrom = this.$parent.globalData.userInfo.uuid;
                return {
                    title: item.goods_name,
                    path: "/pages/service/index?userFrom=" + userFrom,
                    imageUrl: this.goodsImgUrl + (item.app_img ? item.app_img : item.original_img),
                }
            }
        }

        onShow() {
            let _this = this;
            _this.goodsVisible = false;
            _this.cartVisible = false;
            _this.QRVisible = false;
            this.checkAuthorize(function () {
                _this.queryReload();
            });
        };

        onLoad(params) {
            this.params = params;
            this.checkUserFrom(params);
        }
    }
</script>
